#include <iostream>
#include <vector>
#include <cmath>
#include <algorithm>

template <typename T>
class ParamArray {
public:
    std::vector<T> data;
    int size;

public:
    ParamArray(int size) : size(size) {
        data.resize(size);
    }

    void fill() {
        std::cout << "Enter " << size << " elements: ";
        for (int i = 0; i < size; i++) {
            std::cin >> data[i];
        }
    }

    int find_nearest_to_mean() {
        T sum = 0;
        for (int i = 0; i < size; i++) {
            sum += data[i];
        }
        T mean = sum / size;

        int nearest_index = 0;
        T min_difference = std::abs(data[0] - mean);

        for (int i = 1; i < size; i++) {
            T difference = std::abs(data[i] - mean);
            if (difference < min_difference) {
                nearest_index = i;
                min_difference = difference;
            }
        }

        return nearest_index;
    }

    T find_difference_between_neg_pos() {
        int first_neg = -1;
        int second_pos = -1;
        int neg_count = 0;

        for (int i = 0; i < size; i++) {
            if (data[i] < 0 && first_neg == -1) {
                first_neg = i;
            }
            else if (data[i] > 0) {
                neg_count++;
                if (neg_count == 1) {
                    second_pos = i;
                }
            }
        }

        if (first_neg == -1 || second_pos == -1) {
            return 0;
        }

        T difference = 0;

        for (int i = first_neg + 1; i < second_pos; i++) {
            difference -= data[i];
        }

        return difference;
    }


    void sort_even_odd_swap(std::vector<T>& arr) {
        int size = arr.size();

        if (size < 2) {
            return;
        }

        for (int i = 0; i < size - 1; i += 2) {
            if (i + 1 < size) {
                std::swap(arr[i], arr[i + 1]);
            }
        }
    }

    void print_array() {
        for (int i = 0; i < size; i++) {
            std::cout << data[i] << " ";
        }
        std::cout << std::endl;
    }
};

int main() {
    int size;
    std::cout << "Enter the size of the array: ";
    std::cin >> size;

    ParamArray<int> array(size);
    array.fill();

    int nearest_index = array.find_nearest_to_mean();
    std::cout << "Index of the element nearest to the mean: " << nearest_index << std::endl;

    int diff = array.find_difference_between_neg_pos();
    std::cout << "Difference between elements between the first negative and the second positive element: " << diff << std::endl;

    array.sort_even_odd_swap(array.data);
    std::cout << "Sorted even-odd swapped array: ";
    array.print_array();

    return 0;
}
